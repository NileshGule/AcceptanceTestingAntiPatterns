//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.60818.0
// 
namespace UserManagement.Silverlight.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDto", Namespace="http://schemas.datacontract.org/2004/07/UserManagementService.DataTransferObjects" +
        "")]
    public partial class UserDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string FirstNameField;
        
        private int IdField;
        
        private string LastNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="ServiceReference1.UserManagementExposedService")]
    public interface UserManagementExposedService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:UserManagementExposedService/GetUserdetails", ReplyAction="urn:UserManagementExposedService/GetUserdetailsResponse")]
        System.IAsyncResult BeginGetUserdetails(int userId, System.AsyncCallback callback, object asyncState);
        
        UserManagement.Silverlight.ServiceReference1.UserDto EndGetUserdetails(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UserManagementExposedServiceChannel : UserManagement.Silverlight.ServiceReference1.UserManagementExposedService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserdetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserdetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public UserManagement.Silverlight.ServiceReference1.UserDto Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((UserManagement.Silverlight.ServiceReference1.UserDto)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagementExposedServiceClient : System.ServiceModel.ClientBase<UserManagement.Silverlight.ServiceReference1.UserManagementExposedService>, UserManagement.Silverlight.ServiceReference1.UserManagementExposedService {
        
        private BeginOperationDelegate onBeginGetUserdetailsDelegate;
        
        private EndOperationDelegate onEndGetUserdetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserdetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public UserManagementExposedServiceClient() {
        }
        
        public UserManagementExposedServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagementExposedServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementExposedServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementExposedServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetUserdetailsCompletedEventArgs> GetUserdetailsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult UserManagement.Silverlight.ServiceReference1.UserManagementExposedService.BeginGetUserdetails(int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserdetails(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UserManagement.Silverlight.ServiceReference1.UserDto UserManagement.Silverlight.ServiceReference1.UserManagementExposedService.EndGetUserdetails(System.IAsyncResult result) {
            return base.Channel.EndGetUserdetails(result);
        }
        
        private System.IAsyncResult OnBeginGetUserdetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            return ((UserManagement.Silverlight.ServiceReference1.UserManagementExposedService)(this)).BeginGetUserdetails(userId, callback, asyncState);
        }
        
        private object[] OnEndGetUserdetails(System.IAsyncResult result) {
            UserManagement.Silverlight.ServiceReference1.UserDto retVal = ((UserManagement.Silverlight.ServiceReference1.UserManagementExposedService)(this)).EndGetUserdetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserdetailsCompleted(object state) {
            if ((this.GetUserdetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserdetailsCompleted(this, new GetUserdetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserdetailsAsync(int userId) {
            this.GetUserdetailsAsync(userId, null);
        }
        
        public void GetUserdetailsAsync(int userId, object userState) {
            if ((this.onBeginGetUserdetailsDelegate == null)) {
                this.onBeginGetUserdetailsDelegate = new BeginOperationDelegate(this.OnBeginGetUserdetails);
            }
            if ((this.onEndGetUserdetailsDelegate == null)) {
                this.onEndGetUserdetailsDelegate = new EndOperationDelegate(this.OnEndGetUserdetails);
            }
            if ((this.onGetUserdetailsCompletedDelegate == null)) {
                this.onGetUserdetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserdetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserdetailsDelegate, new object[] {
                        userId}, this.onEndGetUserdetailsDelegate, this.onGetUserdetailsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override UserManagement.Silverlight.ServiceReference1.UserManagementExposedService CreateChannel() {
            return new UserManagementExposedServiceClientChannel(this);
        }
        
        private class UserManagementExposedServiceClientChannel : ChannelBase<UserManagement.Silverlight.ServiceReference1.UserManagementExposedService>, UserManagement.Silverlight.ServiceReference1.UserManagementExposedService {
            
            public UserManagementExposedServiceClientChannel(System.ServiceModel.ClientBase<UserManagement.Silverlight.ServiceReference1.UserManagementExposedService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetUserdetails(int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GetUserdetails", _args, callback, asyncState);
                return _result;
            }
            
            public UserManagement.Silverlight.ServiceReference1.UserDto EndGetUserdetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                UserManagement.Silverlight.ServiceReference1.UserDto _result = ((UserManagement.Silverlight.ServiceReference1.UserDto)(base.EndInvoke("GetUserdetails", _args, result)));
                return _result;
            }
        }
    }
}
